import{_ as s,o as a,c as n,d as l}from"./app.77f27e9e.js";const u=JSON.parse('{"title":"Vue2查漏补缺","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. el与data的两种写法","slug":"_1-el与data的两种写法","link":"#_1-el与data的两种写法","children":[]},{"level":2,"title":"2. 自定义指令","slug":"_2-自定义指令","link":"#_2-自定义指令","children":[]}],"relativePath":"03.Vue/02.Vue2查漏补缺.md","lastUpdated":null}'),e={name:"03.Vue/02.Vue2查漏补缺.md"},p=l(`<h1 id="vue2查漏补缺" tabindex="-1">Vue2查漏补缺 <a class="header-anchor" href="#vue2查漏补缺" aria-hidden="true">#</a></h1><h2 id="_1-el与data的两种写法" tabindex="-1">1. el与data的两种写法 <a class="header-anchor" href="#_1-el与data的两种写法" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> vue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">el</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#root</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">//内部挂载</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//对象式</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>或者</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> vue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">	</span><span style="color:#676E95;font-style:italic;">//函数式</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#root</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)		</span><span style="color:#676E95;font-style:italic;">//外部挂载</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>data函数式写法不能写成箭头函数，因为箭头函数没有自己的this，会导致data中的this指向windows对象</li></ul><h2 id="_2-自定义指令" tabindex="-1">2. 自定义指令 <a class="header-anchor" href="#_2-自定义指令" aria-hidden="true">#</a></h2>`,7),o=[p];function t(r,c,i,y,D,d){return a(),n("div",null,o)}const C=s(e,[["render",t]]);export{u as __pageData,C as default};
